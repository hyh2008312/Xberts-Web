@mixin avatarText($imageSize,$lineNumber,$padding,$lineHeight:$defaultLineHeight) {
  position: relative;
  height: $imageSize;
  padding: ( $imageSize - $lineHeight * $lineNumber ) / 2 0 ( $imageSize - $lineHeight * $lineNumber ) / 2 $imageSize + $padding;
  overflow: hidden;
  img {
    width: $imageSize;
    height: $imageSize;
    position: absolute;
    top: 0;
    left: 0;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    border-radius: 50%;
  }
  img + p {
    margin-bottom: 0;
    @if ($lineNumber == 1) {
      @include ellipsisText();
    }
  }
}

$avatarTextTypes: (
  smaller-1: 24px 1 5px,
  small-1: 44px 1 10px,
  small-2: 44px 2 10px,
);
@each $name, $type in $avatarTextTypes {
  .avatar-text-#{$name} {
    @include avatarText($imageSize: nth($type, 1), $lineNumber: nth($type, 2), $padding: nth($type, 3))
  }
  .card-body-header > .avatar-text-#{$name} {
    margin-bottom: 10px;
  }
}

.avatar-inline {
  img {
    position: relative;
    width: 1.5em;
    height: 1.5em;
    border-radius: 50%;
  }
}

@mixin topRightBadgeX($radius:10px,$paddingTop:10px,$paddingLeft:10px,$badgeHeight:16px,$badgeWidth:16px) {
  padding-top: $paddingTop;
  padding-left: $paddingLeft;
  position: relative;
  > i + span.top-right-badge {
    position: absolute;
    top: $paddingTop + round($radius * 0.87) - $badgeHeight;
    left: $paddingLeft + $radius;
    text-align: center;
    font-size: 0.5 * $badgeHeight;
    line-height: $badgeHeight;
    width: $badgeWidth;
    overflow: hidden;
    border-radius: 2px;
  }

}

$numbers: (1 2 3 4 5 8 10);
@each $number in $numbers {
  .p-#{$number} {
    @if ($number==1) {
      @include ellipsisText();
    } @else {
      @include ellipsisMultiText($number);
    }
  }
  .p-#{$number}-max {
    @if ($number==1) {
      @include ellipsisText();
    } @else {
      @include ellipsisMultiTextMax($number);
    }
  }
}

@mixin item($imageSize,$padding,$color) {
  min-height: $imageSize + 20px;
  position: relative;
  padding: 10px 16px 10px $imageSize + $padding + 16px;
  &.padding-lr-clear {
    padding: 10px 0 10px $imageSize + $padding;
    > .item-image {
      left: 0;
    }
  }
  @if $color == $whiteColor {
    border-bottom: 1px solid $darkColor;
  } @else {
    border-bottom: 1px solid $lightColor;
  }
  &.item-bordless {
    border-bottom: 0;
  }
  @if $color == $whiteColor {
  } @else {
    background-color: $whiteColor;
    &.item-hover {
      &:hover {
        background-color: $lightWhiteColor;
      }
    }
  }
  p {
    margin-bottom: 5px;
  }
  > .item-image {
    position: absolute;
    top: 10px;
    left: 16px;
    width: $imageSize;
    img {
      width: $imageSize;
      height: $imageSize;
      -webkit-border-radius: 50%;
      -moz-border-radius: 50%;
      border-radius: 50%;
      margin-bottom: 5px;
    }
  }

  > .item-body {
    position: relative;
    > .item-body-header {
      @if $color == $whiteColor {
        color: $lightGrayColor;
      } @else {
        color: $grayLightColor;
      }
    }
    > .item-body-title {
      @if $color == $whiteColor {
        color: $whiteColor;
      } @else {
        color: $darkGrayColor;
      }
    }
    > .item-body-detail {
      @if $color == $whiteColor {
        color: $lightColor;
      } @else {
        color: $grayLightColor;
      }
    }
    > .item-body-footer {
      border-top: 1px solid lighten($color, 60%);
      color: lighten($color, 40%);
      margin-bottom: 0;
      padding-top: 8px;
      p {
        margin-bottom: 0;
      }
    }
    &:after {
      content: "";
      position: absolute;
      //transition: width 0.2s
      width: 100%;
      bottom: -5px;
      left: 0;
      //border-bottom: 1px solid $lightGrayColor
    }
  }
  &:last-child {
    > .item-body {
      &:after {
        border-bottom-width: 0;
      }
    }
  }

}

$avatarTypes: (
  small: 24px 6px,
  middle: 44px 10px,
  middle-x:60px 14px,
  large: 80px 16px
);
@each $name, $size in $avatarTypes {
  .item-avatar-#{$name} {
    @include item(nth($size, 1), nth($size, 2), $darkColor);
    &:last-child {
      border-bottom: 0;
    }
  }
  .item-avatar-#{$name}-inverse {
    @include item(nth($size, 1), nth($size, 2), $whiteColor);
  }
}

.card {
  //border: 1px solid $lightGrayColor;
  border-radius: 2px;
  background-color: $whiteColor;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
  margin-bottom: 20px;
  &.card-bordless {
    border: 0;
  }
  &.card-margin-bottomless {
    margin-bottom: 0;
  }
  > .card-header, .card-header {
    position: relative;
    width: 100%;
    // image placeholder
    padding-bottom: 66.7%;
    background-repeat: no-repeat;
    background-size: 100% 100%;
    border-bottom: 1px solid $lightGrayColor;
  }
  > .card-body, .card-body {
    padding: 10px 10px;
    > .card-body-header {
      color: $grayLightColor;
    }
    > .card-body-title {
      color: $darkColor;
    }
    > .card-body-detail {
      color: $darkGrayColor;
    }
    > .card-body-footer {
      border-top: 1px solid $lightColor;
      color: $grayLightColor;
      margin-bottom: 0;
      padding-top: 8px;
      p {
        margin-bottom: 0;
      }
    }
  }
  > .card-footer, .card-footer {
    padding: 10px 10px;
    button {
      min-width: 50%;
    }
  }
}

.card-shadowless {
  box-shadow: none;
}

//cover-layer animation for card with fixed-radio card-header
.cover {
  position: relative;
  &:hover {
    //background-color: $primaryColor;
    > .cover-layer-top {
      display: block;
      background-color: rgba(0, 0, 0, 0.7);
      -webkit-transition: padding 0.5s;
      -moz-transition: padding 0.5s;
      -ms-transition: padding 0.5s;
      -o-transition: padding 0.5s;
      transition: padding 0.5s;
      padding: 20% 10%;
      &:hover {
        padding: 10%;
      }
    }
    > .right-enter {
      position: absolute;
      -webkit-transition: right 1s;
      -moz-transition: right 1s;
      -ms-transition: right 1s;
      -o-transition: right 1s;
      transition: right 1s;
      right: 10px;
      bottom: 10px;
      display: block;
    }
  }
  > .cover-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: none;
    background-color: #000;
    z-index: 3;
    p {
      color: $whiteColor;
    }
    > .cover-header {
      height: 66.7%;
    }
    > .cover-footer {
      margin-top: 20px;
      > button {
        min-width: 50%;
      }
    }
  }
  > .right-enter {
    position: absolute;
    right: -50px;
    bottom: 10px;
    display: none;
  }
}

.mask {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: transparent no-repeat center;
  background-size: 100% 100%;
}

.profile {
  background-color: $whiteColor;
  text-align: center;
  border-bottom: 1px solid $lightColor;
  padding: 20px;
  //margin-bottom: 20px;
  img {
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    border-radius: 50%;
    width: 120px;
    height: 120px;
    margin: 10px auto 14px auto;
  }
  > .profile-name {
    color: $darkColor;
    font-weight: bold;
  }
  > .profile-title {
    color: $darkGrayColor;
  }
  > .profile-country {
    color: $grayLightColor;
  }
  > .profile-button {
    width: 50%;
  }
  > p:last-child {
    margin-bottom: 0;
  }
}

.profile-square {
  background-color: $whiteColor;
  text-align: center;
  border-bottom: 1px solid $lightColor;
  padding: 20px;
  //margin-bottom: 20px;
  > img {
    width: 120px;
    height: 120px;
    margin: 10px auto 14px auto;
  }
  > .profile-name {
    color: $darkColor;
    font-weight: bold;
  }
  > .profile-title {
    color: $darkGrayColor;
  }
  > .profile-country {
    color: $grayLightColor;
  }
  > .profile-button {
    width: 50%;
  }
  > p:last-child {
    margin-bottom: 0;
  }
}

.backdrop {
  position: fixed;
  background: rgba(0, 0, 0, 0.5);
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 10000;
}

$spinTypes: (
  small: 14px,
  middle: 30px,
  large: 50px
);
@each $name, $size in $spinTypes {
  .spin-#{$name} {
    text-align: center;
    font-size: $size;
    color: $primaryColor;
    padding: $size / 4;
  }
  .backdrop .spin-#{$name} {
    margin-top: -3 * $size / 4;
    margin-left: -3 * $size / 4;
    position: fixed;
    top: 50%;
    left: 50%;
    z-index: 10001;
  }
}

%message {
  padding-top: 5px;
  //margin-bottom: .5em;
  border-radius: .15em;
  //border: 1px solid;
}

@mixin message($color) {
  @extend %message;
  color: $color;
  //border-color: lighten($color, 20%);
  //background: lighten($color, 40%);
}

$message-types: (
    (error #b94a48) (valid #468847) (warning #c09853) (info #3a87ad)
) !default;

@each $message-type in $message-types {
  $type: nth($message-type, 1);
  $color: nth($message-type, 2);

  .message-#{$type} {
    @include message($color);
  }
}

.breadcrumbs {
  ul {
    li {
      float: left;
    }
  }
}

.ul-list {
  border: 1px solid $lightColor;
  list-style-type: none;
  padding: 0;
  margin-bottom: 0;
  li {
    padding: 10px 32px;
    border-bottom: 1px solid $lightColor;
    background: #fff;
    &:hover {
      background-color: $lightWhiteColor;
    }
  }
  .active {
    background-color: $lightWhiteColor;
  }
  .ul-list-title {
    background-color: $lightColor;
    padding: 16px;
    border-bottom: 1px solid $lightColor;
    &:hover {
      background-color: $lightColor;
    }
  }
}

.list {
  border: 1px solid $lightColor;
}
.list.list-borderless{
  border:none;
}

.list-title {
  background-color: $lightColor;
  padding: 16px;
  border-bottom: 1px solid $lightColor;
}

.list-search {
  padding-top: 11px;
  padding-bottom: 11px;
}

.search .input-sm {
  padding: 5px 25px;;
  border-radius: 15px;
}

.search .fa-search {
  position: absolute;
  left: 22px;;
  top: 0.6em;
  z-index: 3
}

.search .fa-times {
  position: absolute;
  top: 0.6em;
  right: 22px;
  color: #bcbec0;;
}

@media screen and (min-width: 768px) {
  .carousel-caption {
    bottom: 12%;
  }
  .carousel-left {
    left: 15%;
    text-align: left;
  }

  .carousel-right {
    right: 12%;
    text-align: right;
  }
}

@media screen and (max-width: 768px) {
  .carousel-caption {
    bottom: 25%;
  }
}

.button-full {
  width: 100%;
}

.button.button-success-disabled:disabled {
  @extend .btn-success;
}

.button-min-width {
  min-width: 200px;
}

.button-mid-width {
  min-width: 300px;
}

.dialog-vertical-center {
  padding-top: 15%;
}

.dialog-header {
  @include ellipsisText();
  padding-bottom: 2px; // Avoid text bottom cutoff
}
