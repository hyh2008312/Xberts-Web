angular.module("summernote",[]).controller("SummernoteController",["$scope","$attrs","$timeout",function(a,b,c){"use strict";var d,e=angular.copy(a.summernoteConfig)||{};if(angular.isDefined(b.height)&&(e.height=+b.height),angular.isDefined(b.minHeight)&&(e.minHeight=+b.minHeight),angular.isDefined(b.maxHeight)&&(e.maxHeight=+b.maxHeight),angular.isDefined(b.placeholder)&&(e.placeholder=b.placeholder),angular.isDefined(b.focus)&&(e.focus=!0),angular.isDefined(b.airmode)&&(e.airMode=!0),angular.isDefined(b.lang)){if(!angular.isDefined($.summernote.lang[b.lang]))throw new Error('"'+b.lang+'" lang file must be exist.');e.lang=b.lang}e.callbacks=e.callbacks||{},angular.isDefined(b.onInit)&&(e.callbacks.onInit=function(b){a.init({evt:b})}),angular.isDefined(b.onEnter)&&(e.callbacks.onEnter=function(b){a.enter({evt:b})}),angular.isDefined(b.onFocus)&&(e.callbacks.onFocus=function(b){a.focus({evt:b})}),angular.isDefined(b.onPaste)&&(e.callbacks.onPaste=function(b){a.paste({evt:b})}),angular.isDefined(b.onKeyup)&&(e.callbacks.onKeyup=function(b){a.keyup({evt:b})}),angular.isDefined(b.onKeydown)&&(e.callbacks.onKeydown=function(b){a.keydown({evt:b})}),angular.isDefined(b.onImageUpload)&&(e.callbacks.onImageUpload=function(b){a.imageUpload({files:b,editable:a.editable})}),angular.isDefined(b.onMediaDelete)&&(e.callbacks.onMediaDelete=function(b){var c={attrs:{}};c.tagName=b[0].tagName,angular.forEach(b[0].attributes,function(a){c.attrs[a.name]=a.value}),a.mediaDelete({target:c})}),this.activate=function(f,g,h){var i=function(){var a=g.summernote("code");g.summernote("isEmpty")&&(a=""),h&&h.$viewValue!==a&&c(function(){h.$setViewValue(a)},0)},j=e.callbacks.onChange;e.callbacks.onChange=function(d){c(function(){g.summernote("isEmpty")&&(d=""),i()},0),angular.isDefined(b.onChange)?a.change({contents:d,editable:a.editable}):angular.isFunction(j)&&j.apply(this,arguments)},angular.isDefined(b.onBlur)&&(e.callbacks.onBlur=function(b){!e.airMode&&g.blur(),a.blur({evt:b})}),g.summernote(e);var k,l=g.next(".note-editor");l.find(".note-toolbar").click(function(){i(),l.hasClass("codeview")?(l.on("keyup",i),h&&(k=f.$watch(function(){return h.$modelValue},function(a){l.find(".note-codable").val(a)}))):(l.off("keyup",i),angular.isFunction(k)&&k())}),h&&(h.$render=function(){h.$viewValue?g.summernote("code",h.$viewValue):g.summernote("empty")}),angular.isDefined(b.editable)&&(a.editable=l.find(".note-editable")),angular.isDefined(b.editor)&&(a.editor=g),d=g,g.on("$destroy",function(){g.summernote("destroy"),a.summernoteDestroyed=!0})},a.$on("$destroy",function(){a.summernoteDestroyed||d.summernote("destroy")})}]).directive("summernote",[function(){"use strict";return{restrict:"EA",transclude:"element",replace:!0,require:["summernote","?ngModel"],controller:"SummernoteController",scope:{summernoteConfig:"=config",editable:"=",editor:"=",init:"&onInit",enter:"&onEnter",focus:"&onFocus",blur:"&onBlur",paste:"&onPaste",keyup:"&onKeyup",keydown:"&onKeydown",change:"&onChange",imageUpload:"&onImageUpload",mediaDelete:"&onMediaDelete"},template:'<div class="summernote"></div>',link:function(a,b,c,d,e){var f=d[0],g=d[1];if(g)var h=a.$watch(function(){return g.$viewValue},function(c){h(),b.append(c),f.activate(a,b,g)},!0);else e(a,function(a,c){b.append(a.html())}),f.activate(a,b,g)}}}]);